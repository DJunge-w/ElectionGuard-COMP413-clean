(module
  (type $0 (func (param i64) (result i64)))
  (type $1 (func (param i64) (result i32 i32)))
  (type $2 (func (param i32) (result i32)))
  (type $3 (func (param i32) (result i32)))
  (type $4 (func (param i32) (result i32)))
  (type $5 (func (param i32) (result i32)))
  (type $6 (func (param i32) (result i32)))
  (type $7 (func (param i32 i32 i32) (result i32)))
  (type $8 (func (param i32 i32 i32) (result i32)))
  (type $9 (func (param i32 i32 i32 i32) (result i32)))
  (type $10 (func (param i32 i32 i32) (result i32)))
  (type $11 (func (param i32 i32) (result i32)))
  (import "Karamel" "mem" (memory $0 16))
  (import "WasmSupport" "WasmSupport_betole64" (func $0 (type 0)))
  (import "WasmSupport" "WasmSupport_betole64_packed" (func $1 (type 1)))
  (import "WasmSupport" "WasmSupport_align_64" (func $2 (type 2)))
  (import "WasmSupport" "WasmSupport_malloc" (func $3 (type 3)))
  (import "WasmSupport" "WasmSupport_betole32" (func $4 (type 4)))
  (import "WasmSupport" "WasmSupport_trap" (func $5 (type 5)))
  (import "WasmSupport" "WasmSupport_check_buffer_size" (func $6 (type 6)))
  (import "WasmSupport" "WasmSupport_memzero" (func $7 (type 7)))
  (import "Hacl_Hash_SHA2" "Hacl_Hash_SHA2_update_multi_512" (func $8 (type 8)))
  (import "Hacl_Hash_SHA2" "Hacl_Hash_SHA2_update_last_512" (func $9 (type 9)))
  (import "Karamel" "data_start" (global $0 i32))
  (global $1 i32 (i32.const 0))
  (func $10
    (type 10)
    (local
      i64
      i64
      i32
      i32
      i32
      i32
      i64
      i32
      i32
      i32
      i32
      i64
      i32
      i32
      i32
      i32
      i32
      i64
      i32
      i32
      i32
      i32
      i32
      i32
      i64
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i64
      i32
      i32
      i32
      i32
      i32
      i64
      i32
      i32
      i32
      i32
      i32
      i32
      i64
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
    )
    (i32.const 0)
    (i32.load align=1)
    (local.set 7)
    (local.get 0)
    (local.set 8)
    (local.get 8)
    (i32.const 0)
    (i32.const 16)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (i64.load offset=8 align=1)
    (local.set 9)
    (local.get 9)
    (i32.const 128)
    (i64.extend_i32_u)
    (i64.rem_u)
    (i64.const 0)
    (i64.eq)
    (local.get 9)
    (i64.const 0)
    (i64.gt_u)
    (i32.and)
    (if
      (result i32)
      (then (i32.const 128))
      (else
        (local.get 9)
        (i32.const 128)
        (i64.extend_i32_u)
        (i64.rem_u)
        (i32.wrap_i64)
      )
    )
    (local.set 10)
    (local.get 2)
    (i32.const 128)
    (local.get 10)
    (i32.sub)
    (i32.le_u)
    (if
      (result i32)
      (then
        (local.get 0)
        (local.set 11)
        (local.get 11)
        (i32.const 0)
        (i32.const 16)
        (i32.mul)
        (i32.const 1)
        (i32.mul)
        (i32.add)
        (i32.load align=1)
        (local.set 12)
        (local.get 11)
        (i32.const 0)
        (i32.const 16)
        (i32.mul)
        (i32.const 1)
        (i32.mul)
        (i32.add)
        (i32.load offset=4 align=1)
        (local.set 13)
        (local.get 11)
        (i32.const 0)
        (i32.const 16)
        (i32.mul)
        (i32.const 1)
        (i32.mul)
        (i32.add)
        (i64.load offset=8 align=1)
        (local.set 14)
        (local.get 14)
        (i32.const 128)
        (i64.extend_i32_u)
        (i64.rem_u)
        (i64.const 0)
        (i64.eq)
        (local.get 14)
        (i64.const 0)
        (i64.gt_u)
        (i32.and)
        (if
          (result i32)
          (then (i32.const 128))
          (else
            (local.get 14)
            (i32.const 128)
            (i64.extend_i32_u)
            (i64.rem_u)
            (i32.wrap_i64)
          )
        )
        (local.set 15)
        (local.get 13)
        (local.get 15)
        (i32.const 1)
        (i32.mul)
        (i32.const 1)
        (i32.mul)
        (i32.add)
        (local.set 16)
        (local.get 1)
        (local.set 17)
        (local.get 16)
        (local.set 18)
        (local.get 2)
        (local.set 19)
        (loop
          (local.get 19)
          (i32.const 0)
          (i32.gt_u)
          (if
            (then
              (i32.const 0)
              (i32.load align=1)
              (local.get 18)
              (local.get 19)
              (i32.const 1)
              (i32.sub)
              (i32.const 1)
              (i32.mul)
              (i32.add)
              (local.get 17)
              (local.get 19)
              (i32.const 1)
              (i32.sub)
              (i32.const 1)
              (i32.mul)
              (i32.add)
              (i32.load8_u)
              (i32.store8)
              (local.get 19)
              (i32.const 1)
              (i32.sub)
              (local.set 19)
              (i32.const 0)
              (local.set 5)
              (local.set 6)
              (local.get 5)
              (local.get 6)
              (i32.store align=1)
              (br 1)
            )
            (else (nop))
          )
        )
        (local.get 14)
        (local.get 2)
        (i64.extend_i32_u)
        (i64.add)
        (local.set 20)
        (i32.const 0)
        (i32.load align=1)
        (i32.const 1)
        (i32.const 2)
        (i32.mul)
        (i32.const 8)
        (i32.mul)
        (i32.const 0)
        (i32.load align=1)
        (i32.add)
        (call 2)
        (i32.const 0)
        (local.set 5)
        (local.set 6)
        (local.get 5)
        (local.get 6)
        (i32.store align=1)
        (local.set 21)
        (local.get 21)
        (local.get 12)
        (i32.store align=1)
        (local.get 21)
        (local.get 13)
        (i32.store offset=4 align=1)
        (local.get 21)
        (local.get 20)
        (i64.store offset=8 align=1)
        (local.get 21)
        (local.set 22)
        (i32.const 0)
        (local.set 23)
        (loop
          (local.get 23)
          (i32.const 16)
          (i32.lt_u)
          (if
            (then
              (i32.const 0)
              (i32.load align=1)
              (local.get 0)
              (i32.const 0)
              (i32.add)
              (local.get 23)
              (i32.add)
              (local.get 22)
              (i32.const 0)
              (i32.const 16)
              (i32.mul)
              (i32.const 1)
              (i32.mul)
              (i32.add)
              (local.get 23)
              (i32.add)
              (i32.load8_u)
              (i32.store8)
              (local.get 23)
              (i32.const 1)
              (i32.add)
              (local.set 23)
              (i32.const 0)
              (local.set 5)
              (local.set 6)
              (local.get 5)
              (local.get 6)
              (i32.store align=1)
              (br 1)
            )
            (else (nop))
          )
        )
        (i32.const 0)
      )
      (else
        (local.get 10)
        (i32.const 0)
        (i32.eq)
        (if
          (result i32)
          (then
            (local.get 0)
            (local.set 24)
            (local.get 24)
            (i32.const 0)
            (i32.const 16)
            (i32.mul)
            (i32.const 1)
            (i32.mul)
            (i32.add)
            (i32.load align=1)
            (local.set 25)
            (local.get 24)
            (i32.const 0)
            (i32.const 16)
            (i32.mul)
            (i32.const 1)
            (i32.mul)
            (i32.add)
            (i32.load offset=4 align=1)
            (local.set 26)
            (local.get 24)
            (i32.const 0)
            (i32.const 16)
            (i32.mul)
            (i32.const 1)
            (i32.mul)
            (i32.add)
            (i64.load offset=8 align=1)
            (local.set 27)
            (local.get 27)
            (i32.const 128)
            (i64.extend_i32_u)
            (i64.rem_u)
            (i64.const 0)
            (i64.eq)
            (local.get 27)
            (i64.const 0)
            (i64.gt_u)
            (i32.and)
            (if
              (result i32)
              (then (i32.const 128))
              (else
                (local.get 27)
                (i32.const 128)
                (i64.extend_i32_u)
                (i64.rem_u)
                (i32.wrap_i64)
              )
            )
            (local.set 28)
            (local.get 28)
            (i32.const 0)
            (i32.eq)
            (i32.const 0)
            (i32.eq)
            (if
              (result i32)
              (then (local.get 25) (local.get 26) (i32.const 1) (call 8))
              (else (i32.const -559_038_737))
            )
            (drop)
            (local.get 2)
            (i64.extend_i32_u)
            (i32.const 128)
            (i64.extend_i32_u)
            (i64.rem_u)
            (i64.const 0)
            (i64.eq)
            (local.get 2)
            (i64.extend_i32_u)
            (i64.const 0)
            (i64.gt_u)
            (i32.and)
            (if
              (result i32)
              (then (i32.const 128))
              (else
                (local.get 2)
                (i64.extend_i32_u)
                (i32.const 128)
                (i64.extend_i32_u)
                (i64.rem_u)
                (i32.wrap_i64)
              )
            )
            (local.set 29)
            (local.get 2)
            (local.get 29)
            (i32.sub)
            (i32.const 128)
            (i32.div_u)
            (local.set 30)
            (local.get 30)
            (i32.const 128)
            (i32.mul)
            (local.set 31)
            (local.get 2)
            (local.get 31)
            (i32.sub)
            (local.set 32)
            (local.get 1)
            (local.set 33)
            (local.get 1)
            (local.get 31)
            (i32.const 1)
            (i32.mul)
            (i32.const 1)
            (i32.mul)
            (i32.add)
            (local.set 34)
            (local.get 25)
            (local.get 33)
            (local.get 31)
            (i32.const 128)
            (i32.div_u)
            (call 8)
            (drop)
            (local.get 26)
            (local.set 35)
            (local.get 34)
            (local.set 36)
            (local.get 35)
            (local.set 37)
            (local.get 32)
            (local.set 38)
            (loop
              (local.get 38)
              (i32.const 0)
              (i32.gt_u)
              (if
                (then
                  (i32.const 0)
                  (i32.load align=1)
                  (local.get 37)
                  (local.get 38)
                  (i32.const 1)
                  (i32.sub)
                  (i32.const 1)
                  (i32.mul)
                  (i32.add)
                  (local.get 36)
                  (local.get 38)
                  (i32.const 1)
                  (i32.sub)
                  (i32.const 1)
                  (i32.mul)
                  (i32.add)
                  (i32.load8_u)
                  (i32.store8)
                  (local.get 38)
                  (i32.const 1)
                  (i32.sub)
                  (local.set 38)
                  (i32.const 0)
                  (local.set 5)
                  (local.set 6)
                  (local.get 5)
                  (local.get 6)
                  (i32.store align=1)
                  (br 1)
                )
                (else (nop))
              )
            )
            (i32.const 0)
            (i32.load align=1)
            (i32.const 1)
            (i32.const 2)
            (i32.mul)
            (i32.const 8)
            (i32.mul)
            (i32.const 0)
            (i32.load align=1)
            (i32.add)
            (call 2)
            (i32.const 0)
            (local.set 5)
            (local.set 6)
            (local.get 5)
            (local.get 6)
            (i32.store align=1)
            (local.set 39)
            (local.get 39)
            (local.get 25)
            (i32.store align=1)
            (local.get 39)
            (local.get 26)
            (i32.store offset=4 align=1)
            (local.get 39)
            (local.get 27)
            (local.get 2)
            (i64.extend_i32_u)
            (i64.add)
            (i64.store offset=8 align=1)
            (local.get 39)
            (local.set 40)
            (i32.const 0)
            (local.set 41)
            (loop
              (local.get 41)
              (i32.const 16)
              (i32.lt_u)
              (if
                (then
                  (i32.const 0)
                  (i32.load align=1)
                  (local.get 0)
                  (i32.const 0)
                  (i32.add)
                  (local.get 41)
                  (i32.add)
                  (local.get 40)
                  (i32.const 0)
                  (i32.const 16)
                  (i32.mul)
                  (i32.const 1)
                  (i32.mul)
                  (i32.add)
                  (local.get 41)
                  (i32.add)
                  (i32.load8_u)
                  (i32.store8)
                  (local.get 41)
                  (i32.const 1)
                  (i32.add)
                  (local.set 41)
                  (i32.const 0)
                  (local.set 5)
                  (local.set 6)
                  (local.get 5)
                  (local.get 6)
                  (i32.store align=1)
                  (br 1)
                )
                (else (nop))
              )
            )
            (i32.const 0)
          )
          (else
            (i32.const 128)
            (local.get 10)
            (i32.sub)
            (local.set 42)
            (local.get 1)
            (local.set 43)
            (local.get 1)
            (local.get 42)
            (i32.const 1)
            (i32.mul)
            (i32.const 1)
            (i32.mul)
            (i32.add)
            (local.set 44)
            (local.get 0)
            (local.set 45)
            (local.get 45)
            (i32.const 0)
            (i32.const 16)
            (i32.mul)
            (i32.const 1)
            (i32.mul)
            (i32.add)
            (i32.load align=1)
            (local.set 46)
            (local.get 45)
            (i32.const 0)
            (i32.const 16)
            (i32.mul)
            (i32.const 1)
            (i32.mul)
            (i32.add)
            (i32.load offset=4 align=1)
            (local.set 47)
            (local.get 45)
            (i32.const 0)
            (i32.const 16)
            (i32.mul)
            (i32.const 1)
            (i32.mul)
            (i32.add)
            (i64.load offset=8 align=1)
            (local.set 48)
            (local.get 48)
            (i32.const 128)
            (i64.extend_i32_u)
            (i64.rem_u)
            (i64.const 0)
            (i64.eq)
            (local.get 48)
            (i64.const 0)
            (i64.gt_u)
            (i32.and)
            (if
              (result i32)
              (then (i32.const 128))
              (else
                (local.get 48)
                (i32.const 128)
                (i64.extend_i32_u)
                (i64.rem_u)
                (i32.wrap_i64)
              )
            )
            (local.set 49)
            (local.get 47)
            (local.get 49)
            (i32.const 1)
            (i32.mul)
            (i32.const 1)
            (i32.mul)
            (i32.add)
            (local.set 50)
            (local.get 43)
            (local.set 51)
            (local.get 50)
            (local.set 52)
            (local.get 42)
            (local.set 53)
            (loop
              (local.get 53)
              (i32.const 0)
              (i32.gt_u)
              (if
                (then
                  (i32.const 0)
                  (i32.load align=1)
                  (local.get 52)
                  (local.get 53)
                  (i32.const 1)
                  (i32.sub)
                  (i32.const 1)
                  (i32.mul)
                  (i32.add)
                  (local.get 51)
                  (local.get 53)
                  (i32.const 1)
                  (i32.sub)
                  (i32.const 1)
                  (i32.mul)
                  (i32.add)
                  (i32.load8_u)
                  (i32.store8)
                  (local.get 53)
                  (i32.const 1)
                  (i32.sub)
                  (local.set 53)
                  (i32.const 0)
                  (local.set 5)
                  (local.set 6)
                  (local.get 5)
                  (local.get 6)
                  (i32.store align=1)
                  (br 1)
                )
                (else (nop))
              )
            )
            (local.get 48)
            (local.get 42)
            (i64.extend_i32_u)
            (i64.add)
            (local.set 54)
            (i32.const 0)
            (i32.load align=1)
            (i32.const 1)
            (i32.const 2)
            (i32.mul)
            (i32.const 8)
            (i32.mul)
            (i32.const 0)
            (i32.load align=1)
            (i32.add)
            (call 2)
            (i32.const 0)
            (local.set 5)
            (local.set 6)
            (local.get 5)
            (local.get 6)
            (i32.store align=1)
            (local.set 55)
            (local.get 55)
            (local.get 46)
            (i32.store align=1)
            (local.get 55)
            (local.get 47)
            (i32.store offset=4 align=1)
            (local.get 55)
            (local.get 54)
            (i64.store offset=8 align=1)
            (local.get 55)
            (local.set 56)
            (i32.const 0)
            (local.set 57)
            (loop
              (local.get 57)
              (i32.const 16)
              (i32.lt_u)
              (if
                (then
                  (i32.const 0)
                  (i32.load align=1)
                  (local.get 0)
                  (i32.const 0)
                  (i32.add)
                  (local.get 57)
                  (i32.add)
                  (local.get 56)
                  (i32.const 0)
                  (i32.const 16)
                  (i32.mul)
                  (i32.const 1)
                  (i32.mul)
                  (i32.add)
                  (local.get 57)
                  (i32.add)
                  (i32.load8_u)
                  (i32.store8)
                  (local.get 57)
                  (i32.const 1)
                  (i32.add)
                  (local.set 57)
                  (i32.const 0)
                  (local.set 5)
                  (local.set 6)
                  (local.get 5)
                  (local.get 6)
                  (i32.store align=1)
                  (br 1)
                )
                (else (nop))
              )
            )
            (local.get 0)
            (local.set 58)
            (local.get 58)
            (i32.const 0)
            (i32.const 16)
            (i32.mul)
            (i32.const 1)
            (i32.mul)
            (i32.add)
            (i32.load align=1)
            (local.set 59)
            (local.get 58)
            (i32.const 0)
            (i32.const 16)
            (i32.mul)
            (i32.const 1)
            (i32.mul)
            (i32.add)
            (i32.load offset=4 align=1)
            (local.set 60)
            (local.get 58)
            (i32.const 0)
            (i32.const 16)
            (i32.mul)
            (i32.const 1)
            (i32.mul)
            (i32.add)
            (i64.load offset=8 align=1)
            (local.set 61)
            (local.get 61)
            (i32.const 128)
            (i64.extend_i32_u)
            (i64.rem_u)
            (i64.const 0)
            (i64.eq)
            (local.get 61)
            (i64.const 0)
            (i64.gt_u)
            (i32.and)
            (if
              (result i32)
              (then (i32.const 128))
              (else
                (local.get 61)
                (i32.const 128)
                (i64.extend_i32_u)
                (i64.rem_u)
                (i32.wrap_i64)
              )
            )
            (local.set 62)
            (local.get 62)
            (i32.const 0)
            (i32.eq)
            (i32.const 0)
            (i32.eq)
            (if
              (result i32)
              (then (local.get 59) (local.get 60) (i32.const 1) (call 8))
              (else (i32.const -559_038_737))
            )
            (drop)
            (local.get 2)
            (local.get 42)
            (i32.sub)
            (i64.extend_i32_u)
            (i32.const 128)
            (i64.extend_i32_u)
            (i64.rem_u)
            (i64.const 0)
            (i64.eq)
            (local.get 2)
            (local.get 42)
            (i32.sub)
            (i64.extend_i32_u)
            (i64.const 0)
            (i64.gt_u)
            (i32.and)
            (if
              (result i32)
              (then (i32.const 128))
              (else
                (local.get 2)
                (local.get 42)
                (i32.sub)
                (i64.extend_i32_u)
                (i32.const 128)
                (i64.extend_i32_u)
                (i64.rem_u)
                (i32.wrap_i64)
              )
            )
            (local.set 63)
            (local.get 2)
            (local.get 42)
            (i32.sub)
            (local.get 63)
            (i32.sub)
            (i32.const 128)
            (i32.div_u)
            (local.set 64)
            (local.get 64)
            (i32.const 128)
            (i32.mul)
            (local.set 65)
            (local.get 2)
            (local.get 42)
            (i32.sub)
            (local.get 65)
            (i32.sub)
            (local.set 66)
            (local.get 44)
            (local.set 67)
            (local.get 44)
            (local.get 65)
            (i32.const 1)
            (i32.mul)
            (i32.const 1)
            (i32.mul)
            (i32.add)
            (local.set 68)
            (local.get 59)
            (local.get 67)
            (local.get 65)
            (i32.const 128)
            (i32.div_u)
            (call 8)
            (drop)
            (local.get 60)
            (local.set 69)
            (local.get 68)
            (local.set 70)
            (local.get 69)
            (local.set 71)
            (local.get 66)
            (local.set 72)
            (loop
              (local.get 72)
              (i32.const 0)
              (i32.gt_u)
              (if
                (then
                  (i32.const 0)
                  (i32.load align=1)
                  (local.get 71)
                  (local.get 72)
                  (i32.const 1)
                  (i32.sub)
                  (i32.const 1)
                  (i32.mul)
                  (i32.add)
                  (local.get 70)
                  (local.get 72)
                  (i32.const 1)
                  (i32.sub)
                  (i32.const 1)
                  (i32.mul)
                  (i32.add)
                  (i32.load8_u)
                  (i32.store8)
                  (local.get 72)
                  (i32.const 1)
                  (i32.sub)
                  (local.set 72)
                  (i32.const 0)
                  (local.set 5)
                  (local.set 6)
                  (local.get 5)
                  (local.get 6)
                  (i32.store align=1)
                  (br 1)
                )
                (else (nop))
              )
            )
            (i32.const 0)
            (i32.load align=1)
            (i32.const 1)
            (i32.const 2)
            (i32.mul)
            (i32.const 8)
            (i32.mul)
            (i32.const 0)
            (i32.load align=1)
            (i32.add)
            (call 2)
            (i32.const 0)
            (local.set 5)
            (local.set 6)
            (local.get 5)
            (local.get 6)
            (i32.store align=1)
            (local.set 73)
            (local.get 73)
            (local.get 59)
            (i32.store align=1)
            (local.get 73)
            (local.get 60)
            (i32.store offset=4 align=1)
            (local.get 73)
            (local.get 61)
            (local.get 2)
            (local.get 42)
            (i32.sub)
            (i64.extend_i32_u)
            (i64.add)
            (i64.store offset=8 align=1)
            (local.get 73)
            (local.set 74)
            (i32.const 0)
            (local.set 75)
            (loop
              (local.get 75)
              (i32.const 16)
              (i32.lt_u)
              (if
                (then
                  (i32.const 0)
                  (i32.load align=1)
                  (local.get 0)
                  (i32.const 0)
                  (i32.add)
                  (local.get 75)
                  (i32.add)
                  (local.get 74)
                  (i32.const 0)
                  (i32.const 16)
                  (i32.mul)
                  (i32.const 1)
                  (i32.mul)
                  (i32.add)
                  (local.get 75)
                  (i32.add)
                  (i32.load8_u)
                  (i32.store8)
                  (local.get 75)
                  (i32.const 1)
                  (i32.add)
                  (local.set 75)
                  (i32.const 0)
                  (local.set 5)
                  (local.set 6)
                  (local.get 5)
                  (local.get 6)
                  (i32.store align=1)
                  (br 1)
                )
                (else (nop))
              )
            )
            (i32.const 0)
          )
        )
      )
    )
    (local.get 7)
    (i32.const 0)
    (local.set 5)
    (local.set 6)
    (local.get 5)
    (local.get 6)
    (i32.store align=1)
  )
  (func $11
    (type 11)
    (local
      i64
      i64
      i32
      i32
      i32
      i32
      i32
      i32
      i64
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i64
      i32
      i32
      i32
      i32
    )
    (i32.const 0)
    (i32.load align=1)
    (local.set 6)
    (local.get 0)
    (local.set 7)
    (local.get 7)
    (i32.const 0)
    (i32.const 16)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (local.set 8)
    (local.get 7)
    (i32.const 0)
    (i32.const 16)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (i32.load offset=4 align=1)
    (local.set 9)
    (local.get 7)
    (i32.const 0)
    (i32.const 16)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (i64.load offset=8 align=1)
    (local.set 10)
    (local.get 10)
    (i32.const 128)
    (i64.extend_i32_u)
    (i64.rem_u)
    (i64.const 0)
    (i64.eq)
    (local.get 10)
    (i64.const 0)
    (i64.gt_u)
    (i32.and)
    (if
      (result i32)
      (then (i32.const 128))
      (else
        (local.get 10)
        (i32.const 128)
        (i64.extend_i32_u)
        (i64.rem_u)
        (i32.wrap_i64)
      )
    )
    (local.set 11)
    (local.get 9)
    (local.set 12)
    (i32.const 8)
    (local.set 13)
    (local.get 13)
    (call 6)
    (drop)
    (i32.const 0)
    (i32.load align=1)
    (i32.const 8)
    (i32.const 1)
    (i32.mul)
    (i32.const 8)
    (i32.mul)
    (i32.const 0)
    (i32.load align=1)
    (i32.add)
    (call 2)
    (i32.const 0)
    (local.set 4)
    (local.set 5)
    (local.get 4)
    (local.get 5)
    (i32.store align=1)
    (local.set 14)
    (local.get 14)
    (i64.const 0)
    (i64.store align=1)
    (local.get 13)
    (i32.const 1)
    (i32.sub)
    (local.set 13)
    (loop
      (local.get 13)
      (i32.const 0)
      (i32.gt_u)
      (if
        (then
          (i32.const 0)
          (i32.load align=1)
          (local.get 14)
          (local.get 13)
          (i32.const 8)
          (i32.mul)
          (i32.add)
          (local.get 14)
          (i64.load align=1)
          (i64.store align=1)
          (local.get 13)
          (i32.const 1)
          (i32.sub)
          (local.set 13)
          (i32.const 0)
          (local.set 4)
          (local.set 5)
          (local.get 4)
          (local.get 5)
          (i32.store align=1)
          (br 1)
        )
        (else (nop))
      )
    )
    (local.get 14)
    (local.set 15)
    (local.get 8)
    (local.set 16)
    (local.get 15)
    (local.set 17)
    (i32.const 8)
    (local.set 18)
    (loop
      (local.get 18)
      (i32.const 0)
      (i32.gt_u)
      (if
        (then
          (i32.const 0)
          (i32.load align=1)
          (local.get 17)
          (local.get 18)
          (i32.const 1)
          (i32.sub)
          (i32.const 8)
          (i32.mul)
          (i32.add)
          (local.get 16)
          (local.get 18)
          (i32.const 1)
          (i32.sub)
          (i32.const 8)
          (i32.mul)
          (i32.add)
          (i64.load align=1)
          (i64.store align=1)
          (local.get 18)
          (i32.const 1)
          (i32.sub)
          (local.set 18)
          (i32.const 0)
          (local.set 4)
          (local.set 5)
          (local.get 4)
          (local.get 5)
          (i32.store align=1)
          (br 1)
        )
        (else (nop))
      )
    )
    (local.get 11)
    (i32.const 128)
    (i32.rem_u)
    (i32.const 0)
    (i32.eq)
    (local.get 11)
    (i32.const 0)
    (i32.gt_u)
    (i32.and)
    (if
      (result i32)
      (then (i32.const 128))
      (else (local.get 11) (i32.const 128) (i32.rem_u))
    )
    (local.set 19)
    (local.get 12)
    (local.get 11)
    (local.get 19)
    (i32.sub)
    (i32.const 1)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (local.set 20)
    (local.get 12)
    (local.set 21)
    (local.get 15)
    (local.get 21)
    (i32.const 0)
    (call 8)
    (drop)
    (local.get 10)
    (local.get 11)
    (i64.extend_i32_u)
    (i64.sub)
    (local.set 22)
    (i32.const 0)
    (i32.load align=1)
    (i32.const 1)
    (i32.const 2)
    (i32.mul)
    (i32.const 8)
    (i32.mul)
    (i32.const 0)
    (i32.load align=1)
    (i32.add)
    (call 2)
    (i32.const 0)
    (local.set 4)
    (local.set 5)
    (local.get 4)
    (local.get 5)
    (i32.store align=1)
    (local.set 23)
    (local.get 23)
    (local.get 22)
    (i64.store align=1)
    (local.get 23)
    (i64.const 0)
    (i64.store offset=8 align=1)
    (local.get 23)
    (local.set 24)
    (local.get 15)
    (local.get 24)
    (local.get 20)
    (local.get 11)
    (call 9)
    (drop)
    (local.get 15)
    (local.set 25)
    (i32.const 0)
    (local.set 26)
    (loop
      (local.get 26)
      (i32.const 8)
      (i32.lt_u)
      (if
        (then
          (i32.const 0)
          (i32.load align=1)
          (local.get 1)
          (local.get 26)
          (i32.const 8)
          (i32.mul)
          (i32.const 1)
          (i32.mul)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (local.get 25)
          (local.get 26)
          (i32.const 8)
          (i32.mul)
          (i32.add)
          (i64.load align=1)
          (call 0)
          (i64.store align=1)
          (local.get 26)
          (i32.const 1)
          (i32.add)
          (local.set 26)
          (i32.const 0)
          (local.set 4)
          (local.set 5)
          (local.get 4)
          (local.get 5)
          (i32.store align=1)
          (br 1)
        )
        (else (nop))
      )
    )
    (i32.const 0)
    (local.get 6)
    (i32.const 0)
    (local.set 4)
    (local.set 5)
    (local.get 4)
    (local.get 5)
    (i32.store align=1)
  )
  (export "Hacl_Streaming_SHA2_update_512" (func 10))
  (export "Hacl_Streaming_SHA2_finish_512" (func 11))
  (export "data_size" (global 1))
  (data $0 (global.get 0))
)
