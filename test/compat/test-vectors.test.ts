import fs from 'fs/promises';
import path from 'path';
import {getCodecsForContext as getBallotCodecsForContext} from '../../src/electionguard/ballot/json';
import {bigIntContext4096} from '../../src/electionguard/core/group-bigint';
import {pipe} from 'fp-ts/function';
import {fold} from 'fp-ts/Either';

describe('compat', () => {
  test('can decode elections generated by electionguard-python', async () => {
    const content = await fs.readFile(
      path.join(
        'test',
        'compat',
        'fixtures',
        '9DE17EF86BDDC04779B6BED6C5FEC75C8736B383F19D023DD4BB7D2CC7F64165.json'
      ),
      'utf-8'
    );
    const artifacts = JSON.parse(content);

    const possiblyManifest = getBallotCodecsForContext(
      bigIntContext4096()
    ).manifestCodec.decode(artifacts.manifest);

    let manifest;
    pipe(
      possiblyManifest,
      fold(
        err => {
          throw new Error(JSON.stringify(err, null, 4));
        },
        w => {
          manifest = w;
          expect(manifest).toBeTruthy();
        }
      )
    );
  });
});
